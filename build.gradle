buildscript {
    repositories {
        mavenLocal()
        maven {url "https://jenkins.cs.ox.ac.uk/artifactory/plugins-snapshot"}
        maven {url "https://jenkins.cs.ox.ac.uk/artifactory/plugins-release"}
        maven {url "https://repo.grails.org/grails/core"}

    }
    dependencies {
        classpath "ox.softeng.gradle:oxbrcinformatics-gradle-plugins:$oxbrcinformaticsGradlePluginsVersion"
        classpath "org.grails:grails-gradle-plugin:$grailsGradlePluginVersion"
        classpath "org.grails.plugins:hibernate5:$grailsHibernate5Version"
        classpath "org.grails.plugins:views-gradle:$grailsViewsVersion"
        //        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:$assetPipelineVersion"

        // The version of spring-core included is 3.1.3.RELEASE which is incompatible with the grails-gradle-plugin used by all the
        // the Grails modules and causes issues when trying to run-app therefore we exclude it
        classpath("gradle.plugin.com.hierynomus.gradle.plugins:license-gradle-plugin:$licenseGradlePluginVersion") {
            exclude group: 'org.springframework', module: 'spring-core'
        }
        // However without spring-core the license plugin won't work so we need to include it at the top level
        // this version will need to be kept inline with Grails' spring-core
        classpath "org.springframework:spring-core:$licenseGradlePluginSpringCoreOverrideVersion"
    }
}

plugins {
    id 'project-report'
    id 'jacoco'
}

apply plugin: "idea"
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.plugins.views-json"
apply plugin: "org.grails.plugins.views-markup"
//apply plugin: "com.bertramlabs.asset-pipeline"

apply plugin: 'ox.softeng.grails'
apply plugin: "com.github.hierynomus.license"


repositories {
    mavenLocal()
    maven {url "https://jenkins.cs.ox.ac.uk/artifactory/libs-release"}
    maven {url "https://jenkins.cs.ox.ac.uk/artifactory/libs-snapshot"}
    maven {url "https://repo.grails.org/grails/core"}
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    compileOnly "io.micronaut:micronaut-inject-groovy"
    console "org.grails:grails-console"
    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.grails:grails-core"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"
    implementation "org.grails:grails-plugin-url-mappings"
    implementation "org.grails:grails-plugin-rest"
    implementation "org.grails:grails-plugin-codecs"
    implementation "org.grails:grails-plugin-interceptors"
    implementation "org.grails:grails-plugin-services"
    implementation "org.grails:grails-plugin-datasource"
    implementation "org.grails:grails-plugin-databinding"
    implementation "org.grails:grails-web-boot"
    implementation "org.grails:grails-logging"
    implementation "org.grails.plugins:cache"
    implementation "org.grails.plugins:async"
    implementation "org.grails.plugins:hibernate5"
    implementation "org.hibernate:hibernate-core"
    implementation "org.grails.plugins:views-json"
    implementation "org.grails.plugins:views-json-templates"
    implementation "org.grails.plugins:views-markup"
    implementation "com.bertramlabs.plugins:asset-pipeline-grails:$assetPipelineVersion"
    profile "org.grails.profiles:rest-api-plugin"
    developmentOnly "org.springframework.boot:spring-boot-starter-tomcat"
    runtimeOnly "org.glassfish.web:el-impl:2.2.1-b05"
    integrationTestRuntimeOnly "com.h2database:h2"
    runtimeOnly "org.apache.tomcat:tomcat-jdbc"
    runtimeOnly "javax.xml.bind:jaxb-api:$jaxbApiVersion"
    testImplementation "io.micronaut:micronaut-inject-groovy"
    testImplementation "org.grails:grails-gorm-testing-support"
    testImplementation "org.mockito:mockito-core"
    testImplementation "io.micronaut:micronaut-http-client"
    testImplementation "org.grails:grails-web-testing-support"
    testImplementation "org.grails:views-json-testing-support"
    testImplementation "org.hibernate.validator:hibernate-validator:6.2.0.Final"
    testImplementation "io.micronaut:micronaut-http-client"
}

bootRun {
    mainClass = 'uk.ac.ox.softeng.maurodatamapper.plugins.database.sqlserver.Application'
    ignoreExitValue true
    jvmArgs(
        '-Dspring.output.ansi.enabled=always',
        '-noverify',
        '-XX:TieredStopAtLevel=1',
        '-Xmx1024m')
    sourceResources sourceSets.main

    System.properties.each {prop ->
        systemProperty prop.key, prop.value
    }
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}
// enable if you wish to package this plugin as a standalone application
bootJar.enabled = false

grails {
    plugins {
        implementation group: 'uk.ac.ox.softeng.maurodatamapper', name: 'mdm-core', version: mdmCoreVersion
        implementation group: 'uk.ac.ox.softeng.maurodatamapper', name: 'mdm-plugin-datamodel', version: mdmCoreVersion
        implementation group: 'uk.ac.ox.softeng.maurodatamapper', name: 'mdm-plugin-profile', version: mdmCoreVersion
    }
}

apply from: 'dependencies.gradle'
apply from: "${projectDir}/gradle/additions/mdm.gradle"
apply from: "${projectDir}/gradle/additions/staticCodeAnalysis.gradle"